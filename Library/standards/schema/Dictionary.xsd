<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
	
	<!-- METADATA -->
	<xs:element name="METADATA">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				This is the root element for metadata blocks.
			</xs:documentation>
		</xs:annotation>
		
		<xs:complexType>
			<xs:annotation>
				<xs:documentation xml:lang="en">
					The meta block is the metadata transaction unit.
				</xs:documentation>
			</xs:annotation>
			<xs:sequence>
				<xs:element maxOccurs="unbounded" ref="META"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	
	<!-- META -->
	<xs:element name="META">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				Each block represents a set of term, node, edge and tag
				instances which define a set of graph related elements.
			</xs:documentation>
		</xs:annotation>

		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="TERM">
					<xs:annotation>
						<xs:documentation xml:lang="en">
							 List of terms.
						 </xs:documentation>
					</xs:annotation>
				</xs:element>
				
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="TAG">
					<xs:annotation>
						<xs:documentation xml:lang="en">
							List of tags.
						</xs:documentation>
					</xs:annotation>
				</xs:element>
				
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="NODE">
					<xs:annotation>
						<xs:documentation xml:lang="en">
							List of nodes.
						</xs:documentation>
					</xs:annotation>
				</xs:element>

				<xs:element minOccurs="0" maxOccurs="unbounded" ref="EDGE">
					<xs:annotation>
						<xs:documentation xml:lang="en">
							List of edges.
						</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<!-- TERM -->
	<xs:element name="TERM">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				This block holds the term properties, this element is repeated
				for as many terms need to be defined in the current META block.
			</xs:documentation>
		</xs:annotation>

		<xs:complexType>
			<xs:sequence>
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Each item represents a term property, these items should include
						all properties except those defined by the term attributes: namespace,
						local identifier and native identifier.
					</xs:documentation>
				</xs:annotation>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="item"/>
			</xs:sequence>

			<xs:attribute name="ns" type="xs:string">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Term namespace as the namespace's term global identifier.
					</xs:documentation>
				</xs:annotation>
			</xs:attribute>

			<xs:attribute name="lid" type="xs:string">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Term local identifier, required to provide the term identifier.
					</xs:documentation>
				</xs:annotation>
			</xs:attribute>

			<xs:attribute name="pid" type="xs:string">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Term persistent identifier, optional if the local identifier was provided.
						The main use of this attribute is to provide a persistent identifier that
						is not composed by the concatenation of the namespace and local identifier
						with the colon separator token. This attribute represents the term native
						identifier.
					</xs:documentation>
				</xs:annotation>
			</xs:attribute>

			<xs:attribute name="modify" type="xs:string">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Modification reference. This attribute must hold the persistent identifier
						of a term: if provided, it means that the properties of the current block
						will replace or be added to the term corresponding to the native
						identifier provided in this attribute. This implies that this should be
						the only attribute and all other properties should be provided with the
						item elements.
					</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>

	<!-- NODE -->
	<xs:element name="NODE">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				This block holds the node properties, this element is repeated
				for as many nodes need to be defined in the current META block.
			</xs:documentation>
		</xs:annotation>

		<xs:complexType>
			<xs:sequence>
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Each item represents a node property, these items should include
						all properties except those defined by the node attributes: term,
						tag and persistent identifier.
					</xs:documentation>
				</xs:annotation>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="item"/>
			</xs:sequence>

			<xs:attribute name="term" type="xs:string">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Term reference, should refer to the native identifier of the term;
						this attribute and the tag attribute are mutually exclusive.
					</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			
			<xs:attribute name="tag" type="xs:string">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Tag reference, should refer to the native identifier of the tag;
						this attribute and the term attribute are mutually exclusive.
					</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			
			<xs:attribute name="pid" type="xs:string">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						This attribute represents the node persistent identifier.
						Node native identifiers are integer sequence numbers that are assigned
						sequentially as nodes are instantiated, this persistent identifier can
						be used to uniquely identify a node across implementations.
						By default it is filled with either the term or the tag persistent
						identifier; this attribute will be stored in the node.
					</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			
			<xs:attribute name="modify" type="xs:string">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Modification reference. This attribute must hold the persistent identifier
						of a node: if provided, it means that the elements of the current block
						will replace or be added to the node corresponding to the persistent identifier
						provided in this attribute. This also implies that all other
						attributes should be omitted. This implies that this should be the only
						attribute and all other properties should be provided with the item
						elements.
					</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>

	<!-- EDGE -->
	<xs:element name="EDGE">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				This block holds the edge properties, this element is repeated
				for as many edges need to be defined in the current META block.
			</xs:documentation>
		</xs:annotation>

		<xs:complexType>
			<xs:sequence>
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Each item represents an edge property, these items should include
						all properties since none are defined by attributes.
					</xs:documentation>
				</xs:annotation>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="item"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<!-- TAG -->
	<xs:element name="TAG">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				This block holds the tag properties, this element is repeated
				for as many tags need to be defined in the current META block.
			</xs:documentation>
		</xs:annotation>

		<xs:complexType>
			<xs:sequence>
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Each item represents a tag property, these items should include
						all properties since none are defined by attributes.
					</xs:documentation>
				</xs:annotation>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="item"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<!-- Properties -->
	<xs:element name="item">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				These elements represent object properties, each element must reference a Tag.
				Tags are identified with the property attributes, array properties are
				expressed with nested item elements, while scalar properties are expressed
				in the element value.
				Structures are represented by nested item elements.
			</xs:documentation>
		</xs:annotation>

		<xs:complexType mixed="true">
			<xs:sequence>
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Items represent elements of an array property.
					</xs:documentation>
				</xs:annotation>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="item"/>
			</xs:sequence>
			
			<xs:attribute name="tag" type="xs:string">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						This attribute references a Tag sequence number.
					</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			
			<xs:attribute name="pid" type="xs:string">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						This attribute references a Tag native identifier.
					</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			
			<xs:attribute name="const" type="xs:string">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						This attribute references a Tag constant.
					</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			
			<xs:attribute name="key" type="xs:string">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						This attribute holds the string value of the element's key,
						this attribute is used by nested items representing array elements.
					</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
</xs:schema>
